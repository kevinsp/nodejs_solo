//var EventEmitter = require("events").EventEmitter;

function Monster(attackOrder)
{
	this._attackOrder = attackOrder;
}

//util.inherits(Monster, EventEmitter);

Monster.prototype.name = "";

Monster.prototype._health = 5;

Monster.prototype._curAttack = 0;

Monster.prototype.getHealth = function()
{
	return this._health;
};

Monster.prototype.growl = function()
{
	console.log("BUUUUUUUH!");
};

Monster.prototype.attack = function(victim)
{
	console.log("attacker: "+this.name);	
	this.growl();
	console.log("victim: "+victim.name);
	console.log("attack counter: "+this._curAttack);
	console.log("attack started: "+this._attackOrder[this._curAttack]);
	victim.defend(this.attacks[this._attackOrder[this._curAttack]].attack);
	this._curAttack ++;
};

Monster.prototype.defend = function(attackPoints)
{
	console.log("attpoints before: "+attackPoints);
	console.log("function defend, attack counter: "+this._curAttack);
	console.log("current attack: "+this._attackOrder[this._curAttack]);
	attackPoints -= this.attacks[this._attackOrder[this._curAttack]].defense;
	console.log("attpoints after: "+attackPoints);
	console.log("health before: "+this._health);
	if (attackPoints > 0)
	{
		this._health -= attackPoints;
	}
	console.log("health after: "+this._health);
	if (this._health < 1)
	{
		console.log("The fight is over! And the loser is %s", this.name);
		process.exit(0);
	}
	this._curAttack ++;
};

module.exports = Monster;
